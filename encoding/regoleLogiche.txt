riga(1..36).
colonne(1..38).

%TANTE ISTANZE DI SCALA (UNA PER OGNI PIANO E SONO "COSTANTI")
%IL MONDO DI GIOCO
%PIANO TERRA
scala(30,36).
scala(30,35).
scala(30,34).
scala(30,33).
scala(30,32).

%PRIMO PIANO
scala(12,31).
scala(12,30).
scala(12,29).
scala(12,28).
scala(12,27).
scala(12,26).

%SECONDO PIANO
scala(24,25).
scala(24,24).
scala(24,23).
scala(24,22).
scala(24,21).

%TERZO PIANO
scala(5,20).
scala(5,19).
scala(5,18).
scala(5,17).
scala(5,16).

%QUARTO PIANO
scala(22,15).
scala(22,14).
scala(22,13).
scala(22,12).

%OBIETTIVO DA RAGGIUNGERE
%QUINTO PIANO
scala(38,11).
scala(38,10).
scala(38,9).
scala(38,8).

%MI SERVE SAPERE DOVE PARTO
%USATI PER DEBUG
%start(29,36).
%barile(10,15).


%SALTA VIENE USATO PER DARE L'INPUT DI SALTO IN CASO DI BARILI
salta(1).
salta(0).


% OBIETTIVO: ANDARE VERSO LE SCALE
cammina(C,R,S)|noCammina(C,R,S):- colonne(C), riga(R), salta(S).

% DIFFERENZA TRA DOVE STO E DOVE DEVO ANDARE
obiettivo(Z) :- start(C,R), scala(C1,R), Z=C-C1.


% SERVE PER VEDERE SE CAMMINA E START SONO UGUALI ( E DEVONO ESSERLO )
:- start(C,R), cammina(C1,R1,_), R!=R1, obiettivo(Z), Z!=0.


%RICAVA LA DIFFERENZA TRA LA POSIZIONE DEL GIOCATORE E IL BARILE - OK
pos_critica(X):- start(C,R), barile(C1,R), Z=C-C1, &abs(Z;X).

%DISTANZA CRITICA VERTICALE (DISTANZA DAL BARILE PER RIGA)
dis_critica(X):- start(C,R), barile(C,R1), Z=R-R1, &abs(Z;X).

%QUANDO UN BARILE E' IN POSIZIONE CRITICA VERTICALE, CONTROLLA LE COLONNE
disOrCrit(X):- start(C,R), barile(C1,R1), dis_critica(D), D<=2, SOTT=C-C1, &abs(SOTT;X).

%STRONG COSTRAINT PER GARANTIRE UN MOVIMENTO MASSIMO DI 1 POSTO
:-cammina(C,R,_), start(C1,R1), Z=R-R1, &abs(Z;X), X > 1.
:-cammina(C,R,_), start(C1,R1), Z=C-C1, &abs(Z;X), X > 1.

%L'AS NON DEVE ANDARE A SUICIDARSI MENTRE GIOCA
:- cammina(C,R,_), barile(C,R).


%PER NON AVERE ANSWER SET VUOTI
:- #count{C,R,S : cammina(C,R,S)} != 1.

%SE L'OBIETTIVO E' A DESTRA, E NON CI VAI, PAGHI
:~ start(C,R), obiettivo(Z), cammina(C1,R1,_), Z<0, C1 != C+1. [1@1]

%SE L'OBIETTIVO E' A SINISTRA, E NON CI VAI, PAGHI
:~ start(C,R), obiettivo(Z), cammina(C1,R1,_), Z>0, C1 != C-1. [1@1]


%SE UN BARILE E' IN POSIZIONE CRITICA PER UCCIDERE IL PERSONAGGIO, E IL PERSONAGGIO NON SALTA, PAGA
:~pos_critica(X), X<=2, cammina(_,_,S), S=0. [1@2]

%SE L'AS HA UN SALTO, E UN BARILE NON E' IN POSIZIONE CRITICA, PAGA
:~ start(C,R), barile(C1,R), pos_critica(X), X<=2, cammina(C2,_,_),  C2!=C. [1@2]

%SE PROVI A SALTARE SULLA SCALA, PAGHI
:~ start(C,R), barile(C1,R), pos_critica(X), X<=2, Z=0, obiettivo(Z), cammina(_,_,S), S=1. [1@2]

%SE L'AS NON TORNA UNA POSIZIONE INFERIORE SULLE SCALE, PAGA
:~ start(C,R), obiettivo(Z), cammina(C1,R1,_), Z=0, R1!=R-1. [1@3]

% SE SULLE SCALE TI SPOSTI A DESTRA E SINISTRA SENZA MOTIVO, PAGHI
:~ start(C,R), obiettivo(Z), cammina(C1,R1,_), Z=0, C!=C1. [1@3]

%SE SEI VICINO ALLA SCALA E UN BARILE STA SCENDENDO LA SCALA, E TU CI VAI, PAGHI
:~ start(C,R), obiettivo(Z), cammina(C1,_,_), Z=-1, barile(C2,R2), R2<R, C2=C+1, C1!=C. [2@4]
:~ start(C,R), obiettivo(Z), cammina(C1,_,_), Z=1, barile(C2,R2), R2<R, C2=C-1, C1!=C. [2@4]

%SE MENTRE SALI UNA SCALA, UN BARILE E' SOPRA DI TE, E TU NON SCEGLI DI SMETTERE DI SALIRE, PAGHI
:~ start(C,R), obiettivo(Z), cammina(C1,R1,_), Z=0, barile(C2,R2), R2<R, R1!=R+1, R-R2 <5, C2=C, C1!=C-1. [1@5]
:~ start(C,R), obiettivo(Z), cammina(C1,R1,_), Z=0, barile(C2,R2), R2<R, R1!=R+1, R-R2 <5, C2=C, C1!=C+1. [1@5]


%TEORICAMENTE, SE UN BARILE E0 SU UN PIANO SOPRA DI TE,E TU SALI ANCORA, PAGHI
:~ start(C,R), cammina(C1,R1,_), disOrCrit(X), X<3, obiettivo(Z), Z=0, R1<R+1. [1@6]



