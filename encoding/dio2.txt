riga(11..36).
colonne(1..38).

%TANTE ISTANZE DI SCALA (UNA PER OGNI PIANO E SONO "COSTANTI")

%PIANO TERRA
scala(30,36).
scala(30,35).
scala(30,34).
scala(30,33).
scala(30,32).

%PRIMO PIANO
scala(12,31).
scala(12,30).
scala(12,29).
scala(12,28).
scala(12,27).
scala(12,26).

%SECONDO PIANO
scala(24,25).
scala(24,24).
scala(24,23).
scala(24,22).
scala(24,21).

%TERZO PIANO
scala(5,20).
scala(5,19).
scala(5,18).
scala(5,17).
scala(5,16).

%QUARTO PIANO
scala(22,15).
scala(22,14).
scala(22,13).
scala(22,12).

%QUINTO PIANO
scala(38,11).

%MI SERVE SAPERE DOVE PARTO
%start(23,24).
%barile(24,22).

% MI SERVONO LE POSIZIONI DEI BARILI
%barile(2,36).
%barile(5,30).
%barile(5,30).

%salta se ci sono barili
salta(0).
salta(1).


% Cammina finche non trovi una scala
cammina(C,R,S)|noCammina(C,R,S):- colonne(C), riga(R), salta(S).

% DIFFERENZA TRA DOVE STO E DOVE DEVO ANDARE
obiettivo(Z) :- start(C,R), scala(C1,R), Z=C-C1.

%VAI A DX O SX DIPENDE DOVE TI VIENE PIU VICINA LA SCALA ( CON I WEAK )
% PRENDITI LA DIFFERENZA TRA POSIZIONE E SCALA E METTILA TRA I WEAK
% COME RISOLVERE? TROVARE MODO PER VERIFICARE CHE R,R1 E R2 SIANO TUTTI UGUALI


% SERVE PER VEDERE SE CAMMINA E START SONO UGUALI ( E DEVONO ESSERLO )
:- start(C,R), cammina(C1,R1,_), R!=R1, obiettivo(Z), Z!=0.


%TRASFORMARE TUTTO IN WEAK
%ANDARE A DESTRA
%:- start(C,R), obiettivo(Z), cammina(C1,R1,_), Z<0, C1 != C+1.
%ANDARE A SINISTRA
%:- start(C,R), obiettivo(Z), cammina(C1,R1,_), Z>0, C1 != C-1.

%RICAVA LA DIFFERENZA TRA LA POSIZIONE DEL GIOCATORE E IL BARILE - OK -
pos_critica(X):- start(C,R), barile(C1,R), Z=C-C1, &abs(Z;X).

% SALTA QUANDO SEI A UNA CELLA DI DISTANZA
% ( ORIZZONTALI, CHE ABBIANO PERO LO STESSA RIGA ) - OK -

%:- start(C,R), barile(C1,R1), pos_critica(X), X!=1, cammina(_,_,S), S!=0.
%:- start(C,R), barile(C1,R1), pos_critica(X), X=1, cammina(_,_,S), S!=1.
%:-start(C,R), barile(C1,R), pos_critica(X), X=1, cammina(_,_,S), S!=1.
%:-start(C,R), barile(C1,R1), R!=R1, cammina(_,_,S), S!=0.

:- start(C,R), barile(C1,R), C!=C1, pos_critica(X), X=1, cammina(C,R,S), S=0.
:- start(C,R), barile(C1,R1), C!=C1, R1!=R, cammina(C,R,S), S=1.


% COSA SUCCEDE QUANDO SEI DAVANTI ALLA SCALA
%:- start(C,R), obiettivo(Z), cammina(C1,R1,_), Z=0, C!=C1.
%:- start(C,R), obiettivo(Z), cammina(C1,R1,_), Z=0, R1!=R-1.


%PER NON AVERE ANSWER SET VUOTI - OK -
:- #count{C,R,S : cammina(C,R,S)} != 1.



%Se lobiettivo è a destra e non ci vai, paghi
:~ start(C,R), obiettivo(Z), cammina(C1,R1,_), Z<0, C1 != C+1. [1@1]

%Se l obiettivo è a sinistra e non ci vai, paghi
:~ start(C,R), obiettivo(Z), cammina(C1,R1,_), Z>0, C1 != C-1. [1@1]


% se non cè un barile nella stessa cosa, paga
%pare funzionare il weak
%se sei una riga e il barile non si trova sulla stessa riga e saltio saltare, allora paghi
:~ start(C,R), barile(C1,R1), R1!=R, cammina(_,_,S), S=1. [1@1]

%se provi a non saltare quando c"è un barile --> paghi
:~ start(C,R), barile(C1,R), pos_critica(X), X=1, cammina(_,_,S), S=0. [1@2]

%se sei su una scala e scegli una posizione che non è sopra, paghi.
:~ start(C,R), obiettivo(Z), cammina(C1,R1,_), Z=0, R1!=R-1. [1@3]
% se sei su una scala e scegli una posizione come destra e sinistra, paghi.
:~ start(C,R), obiettivo(Z), cammina(C1,R1,_), Z=0, C!=C1. [1@3]

%se mentre stai salendo una scala cè un barile, e sali, ti devono ammazzare.
:~ start(C,R), obiettivo(Z), cammina(C1,R1,_), Z=0, barile(C,R2),R2<R, C1!=C, R1!=R+1. [1@4]


%se l obiettivo è 1 e ti avvicini ad una scala invece di aspettare, paghi
%FUNZIONA BENE MANNAIA MENOMALE CHE FUNZIONA
:~ start(C,R), obiettivo(Z), cammina(C1,_,_), Z=-1, barile(C2,R2), R2<R, C2=C+1, C1!=C. [2@4]
:~ start(C,R), obiettivo(Z), cammina(C1,_,_), Z=1, barile(C2,R2), R2<R, C2=C-1, C1!=C. [2@4]

